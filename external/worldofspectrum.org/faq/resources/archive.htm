<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Archive</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
<link href="../styles/cssFAQ.css" title="CSSFAQStyle" id="CSSFAQStyle" type="text/css" rel="stylesheet" media="screen" />
<link href="../styles/cssFAQPrint.css" title="CSSFAQStylePrint" id="CSSFAQStylePrint" type="text/css" rel="stylesheet" media="print" />
</head>
<body>


<div id="pageHeader" class="pageHeader"><h1>comp.sys.sinclair FAQ</h1></div>

<br />

<div class="siteNavigation">
<a title="SinclairFAQ [on master site]" href="http://www.sinclairfaq.com/">SinclairFAQ</a> &raquo;
<a title="comp.sys.sinclair FAQ" href="../index.html">c.s.s FAQ</a> |
<a title="Documentation" href="documents.htm">Documents</a> |
<a title="Essential Sites" href="../essential.htm">Essential Sites</a> |
<a title="Emulators" href="../emulators/emulators.htm">Emulators</a> |
<a title="Reference" href="../reference/reference.htm">Reference</a> |
<a title="Links" href="links.htm">Links</a> |
<a title="Resources" href="resources.htm">Resources</a> |
<a title="Help" href="../help.htm">Help</a>
</div>

<br />
<table id="Content" cellspacing="1" cellpadding="1" width="100%" border="0">
<tr>
<td width="75" colspan="1" rowspan="1" />
<td>
<table id="SectionTitle" cellspacing="1" cellpadding="1" width="95%" align="center" border="0">
<tr>
<td class="sectionTitle">FAQ Archive</td></tr>
</table>
<table id="SectionContent" cellspacing="1" cellpadding="1" width="95%" align="center" border="0">
<tr>
<td class="bodyTable">
<p>These items were removed from this FAQ as part of this update. If you feel these items should be
restored, please <a title="FAQ Maintenance" href="../../cdn-cgi/l/email-protection#b4d7c7c7d2d5c5f4c3dbc6d8d0dbd2c7c4d1d7c0c6c1d99adbc6d38be7c1d6ded1d7c089f7e7e7918684f2f5e5918684f7dbc6c6d1d7c0dddbda">contact us</a> with
an updated entry, and we'll include it in the next revision. Items listed in this section are included as a courtesy to their author(s) and will be
removed after two subsequent revisions of the FAQ have taken place with no alteration to the entry shown. Entries marked as
'Expired' will remain in the archive, but will no longer be maintained.</p>


<p><strong>Emulators - Acorn / RISC OS</strong>:<br />2 emulators for the Acorn / RISC OS platform appear to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/arm/mzx110.spark">MZX</a> v1.10 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: Loads and Saves <a href="../reference/formats.htm#SNA">.sna</a> files.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Graham Willmott.<br />
<strong>Last updated</strong>: Unknown.<br /><br /></li>


<li>Speculator - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: Emulator specific.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Dave Lawrence.<br />
<strong>Last updated</strong>: Unknown.<br /><br /></li>

</ul>


<p><strong>Emulators - AmigaOS</strong>:<br />7 emulators for the AmigaOS appear to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/cbsv025b.zip">CB Speccy</a> v0.25b - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 128K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Code Busters.<br />
<strong>Last updated</strong>: May 24th, 1999.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/kgb-1.3.lha">KGB</a> v1.3 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: Unknown.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: KGB support BBS.<br />
<strong>Last updated</strong>: September 30th, 1997.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/Spectrum128v02.lha">Spectrum 128K Emulator</a> v0.2 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K / 128K ZX Spectrums.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: <a href="http://www.geocities.com/siliconvalley/horizon/1241/">Alberto Ordóñez</a>.<br />
<strong>Last updated</strong>: March 24th, 1999.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/zx-spectrum4.71.lha">Spectrum</a> v1.7 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: Unknown.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Peter McGavin.<br />
<strong>Last updated</strong>: September 30th, 1997.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/speculator.lha">Speculator '97</a> - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum, partial 128K emulation.<br />
<strong>Tape/Disk Formats</strong>: .zx82 (Emulator specific), .kgb, <a href="../reference/z80format.htm">.z80</a>, .zx, .sp,
<a href="../reference/formats.htm#SNA">.sna</a><br />
<strong>Requirements</strong>: Kickstart 2.04 and 68020 or above.<br />
<strong>Created by</strong>: William James.<br />
<strong>Last updated</strong>: 1997 or before.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/speccylator_1_0.lha">Speccylator</a> v1.0 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum, partial 128K emulation.<br />
<strong>Tape/Disk Formats</strong>: Loads and Saves <a href="../reference/formats.htm#SNA">.sna</a> files.<br />
<strong>Requirements</strong>: Kickstart 2.04.<br />
<strong>Created by</strong>: Richard Carlsson.<br />
<strong>Last updated</strong>: September 1996.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/amiga/zx-spectrum4.71.lha">ZX-Spectrum</a> v4.71 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: Unknown.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Jeroen Kwast.<br />
<strong>Last updated</strong>: September 30th, 1997.<br /><br /></li>

</ul>


<p><strong>Emulators - Atari ST/TT</strong>:<br />2 emulators for the Atari ST and TT appear to no longer be actively maintained
and will be removed during later revisions.</p>
 <ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/atari/zx_sp207.zip">Specci</a> v2.07 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K Spectrum, ZX Interface I.<br />
<strong>Tape/Disk Formats</strong>: Loads and Saves <a href="../reference/formats.htm#SNA">.sna</a> and .snx files.<br />
<strong>Requirements</strong>: Atari ST / TT.<br />
<strong>Created by</strong>: Christian Gandler.<br />
<strong>Last updated</strong>: Unknown.<br /><br />
<strong>Comments</strong>: Not full speed. All documentation in German.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/atari/atari-speccy.zip">Speccy</a> - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K Spectrum.<br />
<strong>Tape/Disk Formats</strong>: Unknown.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Hansjoerg Oppermann.<br />
<strong>Last updated</strong>: Unknown.<br /><br /></li>

</ul>


<p><strong>Emulators - BeOS</strong>:<br />2 emulators for BeOS systems appear to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/beos/Beccy_DPR.zip">Beccy</a> - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: Unknown.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/formats.htm#TAP">.tap</a> and
<a href="../reference/formats.htm#SNA">.sna</a> files.<br />
<strong>Requirements</strong>: BeOS x86.<br />
<strong>Created by</strong>: Max Gontcharov.<br />
<strong>Last updated</strong>: March 5th, 2000<br /><br />
<strong>Comments</strong>: Development preview (incomplete).<br /><br /></li>


<li><a href="http://www.bebits.com/app/989">BeZX</a> v1.1 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: Unknown.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/formats.htm#TAP">.tap</a> files.<br />
<strong>Requirements</strong>: Unknown.<br />
<strong>Created by</strong>: Jens Kilian.<br />
<strong>Last updated</strong>: April 5th, 2000<br /><br />
<strong>Comments</strong>: A BeOS port of XZX-Pro. Available for PPC and x86 platforms. Source code is available.</li>

</ul>


<p><strong>Emulators - Macintosh</strong>:<br />1 emulator for the Macintosh appears to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/mac/MacSpeccy1.1.sit.hqx">MacSpeccy</a> v1.1 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: Loads <a href="../reference/formats.htm#SNA">.sna</a> and
<a href="../reference/z80format.htm">.z80</a> files.<br />
<strong>Hardware requirements</strong>: 68040.<br />
<strong>Created by</strong>: Danny Keogan.<br />
<strong>Last updated</strong>: 1997 or before.<br /><br /></li>

</ul>


<p><strong>Emulators - MSX</strong>:<br />1 emulator for the MSX platform appears to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/msx/msx2spec.zip">ROMU6</a> v2.07 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum (BASIC only).<br />
<strong>Tape/Disk Formats</strong>: Direct tape loading.<br />
<strong>Requirements</strong>: MSX I / II with 128Kb Memory mapper.<br />
<strong>Created by</strong>: Cesar Hernandez and Juan Hernandez.<br />
<strong>Last updated</strong>: Unknown.<br /><br /></li>

</ul>


<p><strong>Emulators - Unix / Linux</strong>:<br />4 emulators available for Linux / UNIX systems appear to no longer be actively maintained
and will be removed during later revisions.</p>
<ul>

<li><a href="http://www.inf.bme.hu/~mszeredi/spectemu/">SpectEmu</a> v0.94 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/formats.htm#SNA">.sna</a>,
<a href="../reference/formats.htm#TZX">.tzx</a>,
<a href="../reference/formats.htm#TAP">.tap</a> and
<a href="../reference/z80format.htm">.z80</a> files.<br />
<strong>Requirements</strong>: Linux or other UNIX OS. Color X11 server and/or SVGALIB console graphics library on Linux.<br />
<strong>Created by</strong>: Miklos Szeredi.<br />
<strong>Last updated</strong>: May 18th, 1998.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/unix/french_spectrum.zip">Spectrum</a> - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/formats.htm#SNA">.sna</a> and
<a href="../reference/z80format.htm">.z80</a> files.<br />
<strong>Requirements</strong>: Intel 386 or above. Linux with XLib, sound card using /dev/audio at 8000 Hz.<br />
<strong>Created by</strong>: Lozevis Jean-Francois.<br />
<strong>Last updated</strong>: August 6th, 1996.<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/unix/x128_0.5.tar.gz">x128</a> v0.5 - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 128K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/z80format.htm">.z80</a>, <a href="../reference/formats.htm#SNA">.sna</a>, .voc,
<a href="../reference/formats.htm#TAP">.tap</a> and <a href="../reference/formats.htm#SLT">.slt</a> files.<br />
<strong>Requirements</strong>: Unix based machine running X-Windows.<br />
<strong>Created by</strong>: <a href="../../cdn-cgi/l/email-protection#610b0c020a0018210b0c0a504f0713040412041317044f020e4f140a4f13040c0e17044f15090812">James McKay</a>.<br />
<strong>Last updated</strong>: July 1996<br /><br /></li>


<li><a href="ftp://ftp.worldofspectrum.org/pub/sinclair/emulators/unix/zx80-0.1d.tar.gz">xz80</a> v0.1d - <span class="itemRemoved">Pending Removal</span><br /><br />
<strong>Emulates</strong>: 48K ZX Spectrum.<br />
<strong>Tape/Disk Formats</strong>: <a href="../reference/formats.htm#SNA">.sna</a>,
<a href="../reference/formats.htm#TAP">.tap</a> and
<a href="../reference/z80format.htm">.z80</a> files.<br />
<strong>Requirements</strong>: Tested on SunOS 4.1.1, HPUX 9.01, IRIX 5.2, AIX 3.2.5 and Linux 1.2.11.<br />
<strong>Created by</strong>: Ian Collier.<br />
<strong>Last updated</strong>: August 10th, 1995.<br /><br /></li>

</ul>



<p><strong>File Formats</strong>:<br />
These entries were removed during this update. The formats are either emulator-specific, infrequently used, exceptionally well
documented by their developers, or used primarily by emulators that have also been archived with this revision.</p>
<ul>

<li><a id="SP"><strong>SP Format</strong></a> - <span class="itemExpired">Expired</span><br />
<pre>   Offset   Size   Description
   ------------------------------------------------------------------------
   0        2      byte   "SP" (signature)
   2        2      word   Program length in bytes (normally 49152 for 48K
                          snaps, or 16384 for 16K snaps)
   4        2      word   Program location (normally 16384)
   6        8      word   BC,DE,HL,AF
   14       4      word   IX,IY
   18       8      word   BC',DE',HL',AF'
   26       2      byte   R,I
   28       4      word   SP,PC
   32       2      word   0 (reserved for future use)
   34       1      byte   Border color
   35       1      byte   0 (reserved for future use)
   36       2      word   Status word
   ------------------------------------------------------------------------

   Status word:
   Bit     Description
   ------------------------------------------------------------------------
   15-8    Reserved for future use
    7-6    Reserved for internal use (0)
      5    Flash: 0=INK/1=PAPER
      4    Interrupt pending for execution
      3    If 1, IM 0; if 0, bit 1 determines interrupt mode
           (Spectrum v 0.99e had this behaviour reversed, and this
           bit was not used in versions previous to v 0.99e)
      2    IFF2 (internal use)
      1    Interrupt Mode (if bit 3 reset): 0=>IM1, 1=>IM2
      0    IFF1: 0=DI/1=EI</pre></li>


<li><a id="ZX"><strong>ZX Format</strong></a> - <span class="itemExpired">Expired</span><br />
All values stored in big-endian format; on 680x0 the most significant byte goes first.
<pre>   Offset   Size   Description
   ------------------------------------------------------------------------
   0        49284  bytes  RAM dump 16252..65535
   49284    132    bytes  unused, make 0
   49416    10     word   10,10,4,1,1 (different settings)
   49426    1      byte   InterruptStatus (0=DI/1=EI)
   49427    2      byte   0,3
   49429    1      byte   ColorMode (0=BW/1=Color)
   49430    4      long   0
   49434    16     word   BC,BC',DE,DE',HL,HL',IX,IY
   49450    2      byte   I,R
   49452    2      word   0
   49454    8      byte   0,A',0,A,0,F',0,F
   49462    8      word   0,PC,0,SP
   49470    2      word   SoundMode (0=Simple/1=Pitch/2=RomOnly)
   49472    2      word   HaltMode  (0=NoHalt/1=Halt)
   49474    2      word   IntMode   (-1=IM0/0=IM1/1=IM2)
   49476    10     bytes  unused, make 0
   ------------------------------------------------------------------------
   Total: 49486 bytes</pre></li>


<li><a id="ZX82"><strong>ZX82 Format</strong></a> - <span class="itemRemoved">Pending Removal</span><br />
Amiga Speculator has its own file format called ZX82 format because it contains a file identifier in the first four
bytes consisting of the ASCII characters "ZX82". The format has a 12 byte header which contains the normal Spectrum type
file information like length, type, start etc. as well as a compression flag which is set if the file is byte run compressed. Snapshot files
have a further 32 bytes of register values and border colour information. Listed below are the offset definitions taken from the
Speculator source code in case you need to write a conversion utility. All registers and other values are in Motorola format
(High, Low). I have defined everything in bytes to avoid any possible confusion.
<pre>* The Standard ZX82 Header
ZX_ID           rs.l    1       Identifier for a Speculator file "ZX82"
ZX_Type         rs.b    1       0:BASIC 1:Numeric 2:String 3:Code 4:Snapshot
ZX_Comp         rs.b    1       Is data block byte run compressed ? $00=No $FF=Yes
ZX_Length_H     rs.b    1       File length up to 64k (ELINE-PROG for BASIC)
ZX_Length_L     rs.b    1
ZX_Start_H      rs.b    1       Start address for code (AUTOSTART for BASIC)
ZX_Start_L      rs.b    1
ZX_ProgLen_H    rs.b    1       Array name (VARS-PROG for BASIC)
ZX_ProgLen_L    rs.b    1
ZX_ZXHdrLen     rs.b    0       Length of ZX file header
ZX_ZXData       rs.b    0       Start of Data block for standard ZX file

* The extended Snapshot ZX82 Header
ZX_Border       rs.b    1       Border colour
ZX_IntMode      rs.b    1       IntMode over-ride (0=use i_reg, 1=im1 and 2=im2)
ZX_Registers    rs.b    0       Z80 register values for Snapshot Files
ZX_iy_H_reg     rs.b    1       (High then Low i.e. Motorola format)
ZX_iy_L_reg     rs.b    1
ZX_ix_H_reg     rs.b    1
ZX_ix_L_reg     rs.b    1
ZX_de_H_reg     rs.b    1
ZX_de_L_reg     rs.b    1
ZX_bc_H_reg     rs.b    1
ZX_bc_L_reg     rs.b    1
ZX_hl_H_reg     rs.b    1
ZX_hl_L_reg     rs.b    1
ZX_af_H_reg     rs.b    1
ZX_af_L_reg     rs.b    1
ZX_de_H_alt     rs.b    1
ZX_de_L_alt     rs.b    1
ZX_bc_H_alt     rs.b    1
ZX_bc_L_alt     rs.b    1
ZX_hl_H_alt     rs.b    1
ZX_hl_L_alt     rs.b    1
ZX_af_H_alt     rs.b    1
ZX_af_L_alt     rs.b    1
ZX_sp_H_reg     rs.b    1
ZX_sp_L_reg     rs.b    1
ZX_if_H_reg     rs.b    1
ZX_if_L_reg     rs.b    1
ZX_rf_H_reg     rs.b    1
ZX_rf_L_reg     rs.b    1
ZX_pc_H_reg     rs.b    1
ZX_pc_L_reg     rs.b    1
ZX_SnpHdrLen    rs.b    0       Length of Snapshot file header
ZX_SnpData      rs.b    65496   Start of data block for Snapshot type file</pre>
The ZX_Type field is derived from the MGT disciple directory MGT_Type-1, so further file types may be
supported in this way in the future.<br /><br />
The compression used is the standard byte run compression as used by ILBM IFF files. The whole 48k data
block is compressed as if it were one long row. See Amiga ROM Kernel Reference Manual: Devices
Third Edition, Appendix A - IFF Specification (P347), Appendix C - Example Packer C code (P538).<br /><br /></li>


<li><a id="ITM"><strong>ITM and PAN Formats</strong></a> - <span class="itemRemoved">Pending Removal</span><br />
These tape formats, used by the MSX Spectrum emulator, start with a two byte header; the first byte specifies the number of tape
blocks in this file, and the second specifies which block has some data contained in the supplementary .pan file. (This byte is zero
if there is no data in the .pan file).<br /><br />
A sequence of tape blocks then follows; each block has a four byte header. The first byte of the header is the LSB of the length
of the block, excluding the four byte header), the second byte is the MSB of the length, the third byte is unknown
(the high nibble is always 0110), and the fourth byte is the block number (the first block is number 1). The data then follows; this
is exactly as would be produced by the Spectrum's ROM routine, apart from the fact that there is no checksum byte at the end.<br /><br />
For the block which is marked in the second byte of the file as having data in the .pan file, the actual block length is
12295 (0x3007) bytes longer than specified in the .itm file. The final 12295 bytes of the data block are stored as the first 12295
bytes of the .pan file.<br /><br />
Finally, note that both the .itm and .pan files have apparently random bytes at the end. A converter for converting
.itm/.pan files to <a href="../reference/formats.htm#TAP">.tap</a> format is <a href="http://www.srcf.ucam.org/~pak21/spectrum/itm2tap.html">available</a>, however.<br /><br /></li>


<li><a id="NET"><strong>NET Format</strong></a> - <span class="itemRemoved">Pending Removal</span><br />
NET files are used by Warajevo to emulate the Interface I Network, which allowed up to 8 different Spectrums
to communicate.<br /><br />
The format of the network files is very simple. They have 260 bytes (or more, but excess bytes will not be used),
with the following structure:
<pre>   Byte    Length  Description

     0       2     Package ID (used for fast checking whether content of the
                   Net file is changed)
     2       2     Reserved; not yet used          
     4     256     Content of the package</pre></li>


<li><a id="PAL"><strong>PAL Format</strong></a> - <span class="itemRemoved">Pending Removal</span><br />
The WARAJEVO.PAL file is used by Warajevo to set its colour palette. They have a very simple 48-byte format:
the first three bytes correspond to R, G and B value for color 0, next three bytes correspond to RGB for color 1, etc;
the first 24 bytes are related to BRIGHT 0 colors, and next 24 bytes are related to BRIGHT 1. All values must be in
the range 0-63.<br /><br /></li>


<li><a id="TAPWarajevo"><strong>TAP (Warajevo) Format</strong></a> - <span class="itemRemoved">Pending Removal</span><br />
Warajevo's tape files (TAP) has the format as follows:<br /><br />
At the beginning of the file there are four bytes with the pointer to the first block. Then follow four bytes with pointer to
the last block. The next four bytes contain #FFFFFFFF. So, empty tape has a format:
<pre>#04 #00 #00 #00 #00 #00 #00 #00 #FF #FF #FF #FF</pre>
Sequence #00 #00 #00 #00 #FF #FF #FF #FF is, in fact, a EOF (end of file) marker. Every block contains following:<br /><br />
<ul>
<li>4 bytes, a pointer to the previous block, which is 0 for first block;</li>
<li>4 bytes, a pointer to the next block or to the EOF marker for last block;</li>
<li>2 bytes, block size;</li>
<li>1 byte, a flag byte;</li>
<li>the data bytes.<br /><br /></li>
</ul>
If the block size is 65534, it is a block which contains tone record samples. The structure is:<br /><br />
<ul>
<li>4 bytes, a pointer to the previous block, which is 0 for first block.</li>
<li>4 bytes, pointer to the next block, or to the EOF marker for last block.</li>
<li>2 bytes, value 65534.</li>
<li>1 byte, a status byte; bits B0-B2 in this byte contain informations which tell how many bits in
the last byte in the block are used (number of used bits is, in fact, number stored in B0-B2
increased by one), bits B3-B4 contain information about the sampling frequency
(with meaning 00 - 15000 Hz, 01 - 22050 Hz, 10 - 30303 Hz, 11 - 44100 Hz), and bits B5-B7 are not used.</li>
<li>2 bytes, decompressed (logical) block size.</li>
<li>2 bytes, compressed (psychical) block size; if these 2 lengths are equal, the block is not compressed.</li>
<li>2 bytes, signature length (internal, for compressed blocks).</li>
<li>the samples (binary), 8 samples are packed into one byte (starting from B7 to B0); whole package of
such sample bytes may be either compressed or uncompressed (the last byte need not contain all 8 bits).<br /><br /></li>
</ul>
If bytes 9, 10, 11 and 12 into a TAP file are not equal to #FF, this is TAP file which is not in native Warajevo TAP
format. In this case, Warajevo assumes Z80's .tap format.<br /><br />
If the block size is 65535, it is a compressed block. It looks like:<br /><br />
<ul>
<li>4 bytes, a pointer to the previous block;</li>
<li>4 bytes, pointer to next block;</li>
<li>2 bytes, 65535;</li>
<li>1 byte, a flag byte;</li>
<li>2 bytes, decompressed size;</li>
<li>2 bytes, compressed size;</li>
<li>2 bytes, signature length (internal);</li>
<li>the data bytes.<br /><br /></li>
</ul>
Signatures are important for the imploding algorithm used by Warajevo. This algorithm, when decompressing, copies bytes
from the source file, or returns for a few bytes, and copies some bytes from a destination file.<br /><br />
The explanation of compressed data bytes is rather complex. We used format similar to those in PKLITE, but unlike PKLITE
where signature bytes are mixed with data bytes, authors divided them in two parts, for easier debugging.<br /><br />
Remember elements of Imploding (LZ77) algorithm. It depends on copying of some byte sequences. For example:
<pre>3D 18 2E 42 3D 18 2E 15 42 3D 19</pre>
will be encoded as:
<pre>3D 18 2E 42 [return for 4 bytes and copy 3 bytes]
   15 [return for 5,copy 2] 19</pre>
The archivers differs on way of encoding of this special 'Return for...' code.<br /><br />
In Warajevo compressed format, there are two parts: signatures and data. In our example coding of signatures will be (binary):
<pre>00001001 010100xx</pre>
while data bytes will be:
<pre>3D 18 2E 42 04 15 05 19</pre>
The signatures are finite automat that describe what to do with data bytes. If the bit is 0, this is simple data byte, if the bit is 1
this is code for returning.<br /><br />
In our example, four zeros in signatures means that four bytes can be simply copied (3D, 18, 2E, 42) to output buffer.
The next bit is 1. This means: Return for xxxx bytes and copy yyyy.<br /><br />
The value of yyyy (size of string to be copied) is in signatures if less than 10 or in signatures and data bytes if &gt;= 10.<br /><br />
The size depends on next 2-4 signature bits:
<pre>    010: size=2
     00: size=3
    100: size=4
    101: size=5
    011: size&gt;=10
   1100: size=6
   1101: size=7
   1110: size=8
   1111: size=9</pre>
If size is greater or equal than 10, the next data byte contains actual size-10. That means: maximal string size is 265.<br /><br />
The next data byte determine lower byte of distance of string to be copied (lower byte of xxxx). If size=2, higher bit is always
zero (so for this size distance can be maximally 255). If size differs from 2 the next 1-6 signature bits determine higher byte:
<pre>        1: higher byte=0
     0000: higher byte=1
     0001: higher byte=2
    00100: higher byte=3
    00101: higher byte=4
    00110: higher byte=5
    00111: higher byte=6
   01nnnn: higher byte=7+nnnn</pre>
Experiment with some ASCII text compressed. There is algorithm in Pascal for decompressing to understand the format:
<pre>procedure decompress_b;
label
  lb,b0,b1,b11,b01,b10,b110,b111,b010,b00,b100,b101,b011,b1100,
  b1101,b1110,b1111,v,v0,v1,v00,v01,v000,v001,v0000,v0001,v00100,v00101,
  v00110,v00111,v0010,v0011,izlaz;

var
  b,put:byte;
  bytes,return_for,i,auxilary:word;
  finished:Boolean;
begin
  OutputBufEnd:=0;
  CurrPosInputBuffer:=SignatureSize+1;
  CurrentSignaturePosition:=0;
  CurrentSignature:=InputBuffer^[CurrentSignaturePosition];
  BitCounter:=0;
  if duzina_ul_dek=0 then finished:=true else finished:=false;
  while not finished do begin
    if nextbit=0 then begin
      TakeFromInputBuffer(b,finished);
      PutToOutputBuffer(b);
    end
     else begin
       I know, it is  goto, but more readable than
        nested if then else sequences
        lb: if nextbit=0 then goto b0 else goto b1;
        b0: if nextbit=0 then goto b00 else goto b01;
        b1: if nextbit=0 then goto b10 else goto b11;
        b11: if nextbit=0 then goto b110 else goto b111;
        b01: if nextbit=0 then goto b010 else goto b011;
        b10: if nextbit=0 then goto b100 else goto b101;
        b110: if nextbit=0 then goto b1100 else goto b1101;
        b111: if nextbit=0 then goto b1110 else goto b1111;
        b010: bytes:=2;
          TakeFromInputBuffer(b,finished);
          return_for:=b;
          goto izlaz;
        b00: bytes:=3;goto v;
        b100: bytes:=4;goto v;
        b101: bytes:=5;goto v;
        b011: TakeFromInputBuffer(b,finished);
          bytes:=b+10;goto v;
        b1100: bytes:=6;goto v;
        b1101: bytes:=7;goto v;
        b1110: bytes:=8;goto v;
        b1111: bytes:=9;goto v;
        v: TakeFromInputBuffer(b,finished);
        return_for:=b;
        if nextbit=0 then goto v0 else goto v1;
        v0: if nextbit=0 then goto v00 else goto v01;
        v1:goto izlaz;
        v00: if nextbit=0 then goto v000 else goto v001;
        v01: Auxiliary:=7;
          if nextbit=1 then Auxiliary:=Auxiliary+8;
          if nextbit=1 then Auxiliary:=Auxiliary+4;
          if nextbit=1 then Auxiliary:=Auxiliary+2;
          if nextbit=1 then Auxiliary:=Auxiliary+1;
          return_for:=return_for+256*Auxiliary;
          goto izlaz;
        v000: if nextbit=0 then goto v0000 else goto v0001;
        v001: if nextbit=0 then goto v0010 else goto v0011;
        v0010: if nextbit=0 then goto v00100 else goto v00101;
        v0011: if nextbit=0 then goto v00110 else goto v00111;
        v0000: return_for:=return_for+1*256;goto izlaz;
        v0001: return_for:=return_for+2*256;goto izlaz;
        v00100: return_for:=return_for+3*256;goto izlaz;
        v00101: return_for:=return_for+4*256;goto izlaz;
        v00110: return_for:=return_for+5*256;goto izlaz;
        v00111: return_for:=return_for+6*256;goto izlaz;
        izlaz:
        for i:=1 to bytes do begin
          put:=OutputBuffer^[OutputBufEnd-return_for+1];
          PutToOutputBuffer(put)
        end;
     end else
  end while
end; decompress_b</pre></li>
</ul>


</td></tr>
</table></td>
<td width="75" /></tr>
</table>

<div class="pageFooter">$Id: archive.htm,v 1.5 2004/07/05 08:20:13 pak21 Exp $<br />
Please read the
<a title="Copyright Notice and Distribution Policy" href="../distributions.htm">Copyright Notice</a> for distribution policies, and the
<a title="Contributors" href="../credits.htm">Credits</a> page for a list of contributors.</div>

<script data-cfasync="false" src="../../cdn-cgi/scripts/d07b1474/cloudflare-static/email-decode.min.js"></script></body>
</html>