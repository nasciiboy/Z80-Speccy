<HTML><HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="Author" CONTENT="Trent Lillehaugen">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.01 [en] (Win95; I) [Netscape]">
   <TITLE>lesson1</TITLE></HEAD><BODY BACKGROUND="gfx/zand.jpg">
<CENTER><B><FONT FACE="Times New Roman,Times">
<FONT SIZE=+3>L</FONT><FONT SIZE=+2>ESSON</FONT><FONT SIZE=+3>1</FONT><FONT SIZE=+2>:</FONT></FONT></B></CENTER><CENTER><HR WIDTH="100%"></CENTER><FONT SIZE=+1>&nbsp; To make an ASM program you will need the foloowingfiles:</FONT><UL><LI><FONT SIZE=+1>ASM86v?? (found on ticalc.org)</FONT></LI><LI><FONT SIZE=+1>TASM (also found on ticalc.org)</FONT></LI><LI><FONT SIZE=+1>TASM80.TAB (notice a patern)</FONT></LI></UL><FONT SIZE=+1>&nbsp;After you have all the programming utilities you need,you are <B><I><U>almost</U></I></B> ready to start your first program.&nbsp;This is what every ASM program will look like:</FONT><BR>&nbsp;<BLOCKQUOTE><TT>#include "asm86.h"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;I use Asm86 to compile, so I include this</TT><BR><TT>#include "ti86asm.inc"&nbsp;&nbsp;&nbsp;&nbsp; ;this is TI's includefile</TT><P><TT>.org _asm_exec_ram&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;starting point for all asm progs, $D748</TT><BR><TT>&nbsp;&nbsp; ; all the ASM goes in here</TT><BR><TT>.end</TT></BLOCKQUOTE><FONT SIZE=+1>&nbsp;&nbsp; The most important thing you need to understandis what a register is, and how to use it.&nbsp; A register is a 16bit (2byte) memory location, found on the CPU itself.&nbsp; On the Z80 you havethe following important Registers:</FONT><UL><LI><FONT SIZE=+1>AF</FONT></LI><LI><FONT SIZE=+1>BC</FONT></LI><LI><FONT SIZE=+1>DE</FONT></LI><LI><FONT SIZE=+1>HL</FONT></LI><LI><FONT SIZE=+1>IX</FONT></LI><LI><FONT SIZE=+1>IY</FONT></LI><LI><FONT SIZE=+1>(there are others, but we won't use them in my examples,I don't even unstand them all)</FONT></LI></UL><FONT SIZE=+1><FONT FACE="Times New Roman,Times">&nbsp; </FONT>These registerscan be broken up into TWO 8bit (1 byte) registers each. (ie A,F,B,C,D,E,L,..)&nbsp;Of these 8 bit registers, A is the most important.&nbsp; Register A iswhat is called the Accumulator, some calls will only work on A (sub,or,xor,and,...).&nbsp;The A register is grouped with the F register.. Why? well F stands forFlags, and it contains the follwing flags (sign,zero,half carry,parity,add/subject,carry)</FONT><CENTER>&nbsp;<IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756></CENTER><CENTER><A NAME="LIST"></A><B><I><FONT COLOR="#000000"><FONT SIZE=+2>Theseare the instructions that will be covered in this lesson:</FONT></FONT></I></B></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson1.htm#LD">LD</A></FONT></FONT></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson1.htm#ADD/SUB">ADD/SUB</A></FONT></FONT></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson1.htm#INC/DEC">INC/DEC</A></FONT></FONT></CENTER>&nbsp;<CENTER><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756></CENTER><A NAME="LD"></A><FONT SIZE=+4>LD</FONT><BR><FONT SIZE=+1><FONT FACE="Times New Roman,Times">&nbsp; </FONT>Thefirst thing you will want to do is to load a value into a register.&nbsp;This is done with the LD instruction.&nbsp; Here are some examples:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld a,0&nbsp;&nbsp;&nbsp; ; loads the value0 into register a</FONT></TT><BR><TT><FONT SIZE=+1>ld b,2&nbsp;&nbsp;&nbsp; ; loads the value 2 intoregister b</FONT></TT><BR><TT><FONT SIZE=+1>ld de,257 ; loads the value 257 into register de</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;(same as loading 1 into d and 1 into e)</FONT></TT><BR><TT><FONT SIZE=+1>ld d,$0A&nbsp; ; NOTE $8A represents a HEX number,</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; %00100100 represents a BIN number,</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; 52 just a decimal number.</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;; this loads $0A into d, $0A is the same as 10</FONT></TT><BR><TT><FONT SIZE=+1>ld a,d&nbsp;&nbsp;&nbsp; ; loads the current valueof d into a (in this case 10)</FONT></TT><BR>&nbsp;<BR><FONT SIZE=+1><B><I><FONT COLOR="#CC0000">NOTE</FONT></I></B><FONT COLOR="#000000">:An 8-bit regiser can only hold the values from 0-255 (%00000000-%11111111),but a 16 bit register can hold the values 0-65535.</FONT></FONT></BLOCKQUOTE><FONT SIZE=+1>&nbsp; The register HL, is primarly used for ADDRESSING,this means it usually points to another memory location.&nbsp; The videoMemory is located at $FC00, so to have hl "point" to the video memory youuse the command:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld hl,$FC00 ;loads the value $FC00 into registerhl</FONT></TT></BLOCKQUOTE><FONT SIZE=+1><TT>&nbsp; </TT>Now, to copy a value into the memory locationthat HL is pointing to, we do somthing called inderect addressing.&nbsp;This is accomplished by placing parens around the register name.</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld a,%10101010&nbsp;&nbsp;&nbsp; ;loads thevalue %10101010 into reg. a</FONT></TT><BR><TT><FONT SIZE=+1>ld (hl),a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;loads the value %10101010 into the</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;memory location that hl "points" to</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;the value of HL is $fc00 therefore</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;the value %10101010 is loaded into</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;memory location $fc00, which happens</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;to be the video memory :)</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;<B><I>IT DOES NOT CHANGE THE VALUE OF HL!!</I></B></FONT></TT><BR><TT><FONT SIZE=+1>ld a,(hl)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;similiarly this loads the value at</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;mem location $fc00 into the reg. a</FONT></TT><BR>&nbsp;</BLOCKQUOTE><A HREF="lesson1.htm#LIST">back to list of instructions</A><BR><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756><BR><A NAME="ADD/SUB"></A><FONT SIZE=+4>ADD/SUB</FONT><BR><FONT SIZE=+1>&nbsp; The next thing to learn, is how to add and subtractfrom a register.&nbsp; To do this we use the indtructions ADD and SUB.</FONT><UL><LI><FONT SIZE=+1>add a,##</FONT></LI><LI><FONT SIZE=+1>add hl,<I>ss</I>&nbsp; (where <I>ss</I> = bc,de,hl, or sp)</FONT></LI><LI><FONT SIZE=+1>add ix,<I>pp</I> (where <I>pp</I> = bc,de,ix, or sp)</FONT></LI><LI><FONT SIZE=+1>add iy,<I>rr&nbsp;</I> (where <I>rr =</I> bc,de,iy, or sp)</FONT></LI></UL><FONT SIZE=+1>These are the only ways that ADD can be used.&nbsp; ex:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld a,8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a=8</FONT></TT><BR><TT><FONT SIZE=+1>add a,10&nbsp;&nbsp;&nbsp; ;a=a+10&nbsp; a=18</FONT></TT><BR><TT><FONT SIZE=+1>ld hl,$FC00 ;hl = $FC00</FONT></TT><BR><TT><FONT SIZE=+1>ld bc,$00BB ;bc = $00BB</FONT></TT><BR><TT><FONT SIZE=+1>add hl,FCBB ;hl=hl+bc&nbsp; hl = $fcbb</FONT></TT><BR>&nbsp;</BLOCKQUOTE><FONT SIZE=+1>In order to add anything to the other registers, you mustdo it inderectly:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld b,8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;b=8</FONT></TT><BR><TT><FONT SIZE=+1>ld a,b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a=b</FONT></TT><BR><TT><FONT SIZE=+1>add a,5&nbsp;&nbsp;&nbsp;&nbsp; ;a='b+5'</FONT></TT><BR><TT><FONT SIZE=+1>ld b,a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;<B><I>b='b+5'</I></B></FONT></TT><P><TT><FONT SIZE=+1>;or</FONT></TT><P><TT><FONT SIZE=+1>ld bc,46&nbsp;&nbsp;&nbsp; ;bc=46</FONT></TT><BR><TT><FONT SIZE=+1>ld h,b&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;you can't do'ld hl,bc'</FONT></TT><BR><TT><FONT SIZE=+1>ld l,c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;</FONT></TT><BR><TT><FONT SIZE=+1>ld bc,52&nbsp;&nbsp;&nbsp; ;</FONT></TT><BR><TT><FONT SIZE=+1>add hl,bc&nbsp;&nbsp; ;hl = bc+52</FONT></TT><BR><TT><FONT SIZE=+1>ld b,h&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;.</FONT></TT><BR><TT><FONT SIZE=+1>ld c,l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;<B><I>bc =bc+52</I></B></FONT></TT></BLOCKQUOTE><FONT SIZE=+1>Now you know how to add, what about subtracting?</FONT><UL><LI><FONT SIZE=+1>sub ##&nbsp; ; a=a-##</FONT></LI></UL><FONT SIZE=+1>That's it!&nbsp; you can only SUB from a (the accumulator),therefore all other subratcions must be made inderectly.&nbsp; Here aresome examples:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld a,16&nbsp;&nbsp;&nbsp; ;a=16</FONT></TT><BR><TT><FONT SIZE=+1>sub 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a=a-5, a=11</FONT></TT><P><TT><FONT SIZE=+1>ld b,65&nbsp;&nbsp;&nbsp; ;b=65</FONT></TT><BR><TT><FONT SIZE=+1>ld a,b&nbsp;&nbsp;&nbsp;&nbsp; ;a=65</FONT></TT><BR><TT><FONT SIZE=+1>sub 6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;a=65-6, a=59</FONT></TT><BR><TT><FONT SIZE=+1>ld b,a&nbsp;&nbsp;&nbsp;&nbsp; ;b=59</FONT></TT></BLOCKQUOTE><FONT SIZE=+1>ADD and SUB let you add or subtract any number, however ifyou only want to add or subract the value 1 then you can use INC/DEC</FONT><P><A HREF="lesson1.htm#LIST">back to list of instructions</A><CENTER><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756></CENTER><A NAME="INC/DEC"></A><FONT SIZE=+4>INC/DEC</FONT><UL><LI><FONT SIZE=+1>inc <I>r</I>&nbsp;&nbsp; ;(where <I>r</I>=a,b,c,d,e,h,orl)</FONT></LI><LI><FONT SIZE=+1>inc <I>ss</I>&nbsp; ;(where <I>ss</I>=bc,de,hl, or sp)</FONT></LI><LI><FONT SIZE=+1>dec <I>r</I></FONT></LI><LI><FONT SIZE=+1>dec <I>ss</I></FONT></LI></UL><FONT SIZE=+1>These are the ony cases we will use.&nbsp; Here are someexamples:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>ld a,5&nbsp;&nbsp;&nbsp; ;a=5</FONT></TT><BR><TT><FONT SIZE=+1>inc a&nbsp;&nbsp;&nbsp;&nbsp; ;a=a+1, a=6</FONT></TT><BR><TT><FONT SIZE=+1>ld b,a&nbsp;&nbsp;&nbsp; ;b=a, b=6</FONT></TT><BR><TT><FONT SIZE=+1>dec b&nbsp;&nbsp;&nbsp;&nbsp; ;b=b-1, b=5</FONT></TT><P><TT><FONT SIZE=+1>ld bc,568 ;bc=568</FONT></TT><BR><TT><FONT SIZE=+1>inc bc&nbsp;&nbsp;&nbsp; ;bc=bc+1, bc=569</FONT></TT><BR><TT><FONT SIZE=+1>inc bc&nbsp;&nbsp;&nbsp; ;bc=bc+1, bc=570</FONT></TT></BLOCKQUOTE>&nbsp;<A HREF="lesson1.htm#LIST">back to list of instructions</A><BR><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756><CENTER><FONT SIZE=+1><A HREF="z80_home.htm">INDEX</A>&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="lesson2.htm">LESSON2</A></FONT></CENTER><CENTER>This is the end of Lesson1, I do not gaurantee any correctnessof any statements made above.</CENTER></BODY></HTML>