<HTML><HEAD>   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">   <META NAME="Author" CONTENT="Trent Lillehaugen">   <META NAME="GENERATOR" CONTENT="Mozilla/4.01 [en] (Win95; I) [Netscape]">   <TITLE>ASM 86 LESSON 2</TITLE></HEAD><BODY BACKGROUND="gfx/zand.jpg"><CENTER><B><FONT FACE="Times New Roman,Times"><FONT SIZE=+3>L</FONT><FONT SIZE=+2>ESSON</FONT><FONT SIZE=+3>2</FONT><FONT SIZE=+2>:</FONT></FONT></B></CENTER><CENTER><HR WIDTH="100%"></CENTER><FONT SIZE=+1>&nbsp;</FONT>&nbsp;&nbsp; <FONT SIZE=+1>The stack...&nbsp;The stack is a very important part of ASM programming.&nbsp; I will trymy best in illustrating exactly how the stack works.&nbsp; The stack isbasically a FILO buffer (<B>F</B>irst <B>I</B>n <B>L</B>ast <B>O</B>ut),this means that the first item <B><I>PUSH</I></B></FONT><B><I>ED</I></B><FONT SIZE=+1>into the stack is the last one to<I> <B>POP</B></I></FONT><B><I>ED</I></B><FONT SIZE=+1>out. Converly the Last In, is also the First out.</FONT><CENTER>&nbsp;<IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756></CENTER><CENTER><A NAME="LIST"></A><B><I><FONT COLOR="#000000"><FONT SIZE=+2>Theseare the instructions/ideas that will be covered in this lesson:</FONT></FONT></I></B></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson2.htm#PUSH">PUSH</A></FONT></FONT></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson2.htm#POP">POP</A></FONT></FONT></CENTER><CENTER><FONT COLOR="#990000"><FONT SIZE=+2><A HREF="lesson2.htm#STACK">MORE DETAILSABOUT THE STACK</A></FONT></FONT></CENTER>&nbsp;<CENTER><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756></CENTER><A NAME="PUSH"></A><FONT SIZE=+4>PUSH</FONT><BR><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>&nbsp; To add an itemto the stack we use the PUSH instruction.&nbsp; You can only PUSH the followingregisters:</FONT></FONT><UL><LI><FONT SIZE=+1>AF</FONT></LI><LI><FONT SIZE=+1>BC</FONT></LI><LI><FONT SIZE=+1>DE</FONT></LI><LI><FONT SIZE=+1>HL</FONT></LI><LI><FONT SIZE=+1>IX</FONT></LI><LI><FONT SIZE=+1>IY</FONT></LI></UL><FONT SIZE=+1>&nbsp; Here are some examples:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>push af&nbsp;&nbsp;&nbsp; ;adds the valuestored in AF to the stack</FONT></TT><BR><TT><FONT SIZE=+1>push bc&nbsp;&nbsp;&nbsp; ;adds the value storedin BC to the stack</FONT></TT></BLOCKQUOTE><FONT SIZE=+1><FONT COLOR="#660000">&nbsp;&nbsp; NOTE</FONT>: The registerstill contains the value it had before being PUSHED</FONT><BR><FONT SIZE=+1><FONT COLOR="#660000">&nbsp;&nbsp; NOTE</FONT>:&nbsp;It is very important that you DON'T exit the program before POPPING, allPUSHED values.&nbsp; The operating system, I believe, calls what is inthe stack after the last program terminates.&nbsp; Having random valuesin there will cause a crash, or some unwanted results.</FONT><BR>&nbsp;<P><A HREF="lesson2.htm#LIST">back to list of instructions</A><P><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756><BR><A NAME="POP"></A><FONT SIZE=+4>POP</FONT><BR><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>&nbsp; To remove anitem from the stack we use the POP instruction.&nbsp; You can only POPto the following registers:</FONT></FONT><UL><LI><FONT SIZE=+1>AF</FONT></LI><LI><FONT SIZE=+1>BC</FONT></LI><LI><FONT SIZE=+1>DE</FONT></LI><LI><FONT SIZE=+1>HL</FONT></LI></UL><FONT SIZE=+1>&nbsp; Here are some examples:</FONT><BLOCKQUOTE><TT><FONT SIZE=+1>pop af&nbsp;&nbsp;&nbsp; ;stores the valueon the top of the</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;stack in AF</FONT></TT>&nbsp;<TT> <FONT SIZE=+1>(removes that value fromthe stack)</FONT></TT><BR><TT><FONT SIZE=+1>pop bc&nbsp;&nbsp;&nbsp; ;stores the value on thetop of the</FONT></TT><BR><TT><FONT SIZE=+1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;;stack in BC (removes that value from the stack)</FONT></TT></BLOCKQUOTE><A HREF="lesson2.htm#LIST">back to list of instructions</A><P><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756><BR><A NAME="STACK"></A><FONT SIZE=+4>THE STACK</FONT><BR><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>&nbsp; So, <B><I>WHAT</I></B>is the stack?&nbsp; You can think of it in several ways:</FONT></FONT><UL><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>a STACK of cards</FONT></FONT></LI><UL><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>PUSH = adds a card tothe top of the stack</FONT></FONT></LI><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>POP = takes a card offthe top of the stack</FONT></FONT></LI></UL><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>a pile of books</FONT></FONT></LI><UL><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>PUSH = place a book onthe top of the pile</FONT></FONT></LI><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>POP = takes a book ofthe top of the pile</FONT></FONT></LI></UL><LI><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>.... and so on</FONT></FONT></LI></UL><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>&nbsp;OK, Get the Idea?If not maybe this will help.&nbsp; Lets say we start with an empty stack:</FONT></FONT><CENTER>&nbsp;</CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>&nbsp;</CENTER></TD></TR></TABLE></CENTER><CENTER><FONT FACE="Times New Roman,Times"><FONT SIZE=+1>Next we do thefollowing commands:</FONT></FONT></CENTER><CENTER><TT><FONT SIZE=+1>ld bc,10</FONT></TT></CENTER><CENTER><TT><FONT SIZE=+1>push bc</FONT></TT></CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>10</CENTER></TD></TR></TABLE></CENTER><CENTER>&nbsp;</CENTER><CENTER>ld de,26</CENTER><CENTER>push de</CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>26</CENTER></TD></TR><TR><TD><CENTER>10</CENTER></TD></TR></TABLE></CENTER><CENTER>ld de,15</CENTER><CENTER>push de</CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>15</CENTER></TD></TR><TR><TD><CENTER>26</CENTER></TD></TR><TR><TD><CENTER>10</CENTER></TD></TR></TABLE></CENTER><CENTER>pop bc</CENTER><CENTER>;now bc contains the value</CENTER><CENTER>;that was on the top of the stack</CENTER><CENTER>;in this case 15</CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>26</CENTER></TD></TR><TR><TD><CENTER>10</CENTER></TD></TR></TABLE></CENTER><CENTER>pop de</CENTER><CENTER>;now de contains the value</CENTER><CENTER>;that was on the top of the stack</CENTER><CENTER>;in this case 26</CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD><CENTER>10</CENTER></TD></TR></TABLE></CENTER><CENTER>pop hl</CENTER><CENTER>;now hl contains the value</CENTER><CENTER>;that was on the top of the stack</CENTER><CENTER>;int this case 10</CENTER><CENTER><FONT SIZE=+1>Then this is our new stack:</FONT></CENTER><CENTER><TABLE BORDER COLS=1 WIDTH="25%" ><TR><TD></TD></TR></TABLE></CENTER><A HREF="lesson2.htm#LIST">back to list of instructions</A><BR><IMG SRC="waveline.gif" HEIGHT=16 WIDTH=756><CENTER><FONT SIZE=+1><A HREF="lesson1.htm">LESSON1</A></FONT>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT SIZE=+1><A HREF="z80_home.htm">INDEX</A>&nbsp;&nbsp;&nbsp;&nbsp; <A HREF="lesson3.htm">LESSON3</A></FONT></CENTER><CENTER>This is the end of Lesson1, I do not gaurantee any correctnessof any statements made above.</CENTER></BODY></HTML>