<HTML>
<HEAD><TITLE>86 Central - Display (LCD) Screen</TITLE>
<META NAME="keywords" CONTENT="Findpixel, find pixel, display, LCD, screen, drawing, plotting, pixels, pixel, pixel plot. TI-86,TI86,Z80,zilog,asm,assembly,programming,coding,graphic,calculator,TI,Texas Instruments,games,programs,software,docs,faq,tutorials,tutors,articles,links,tools,IDE,emulate,emulators,LCD,display,keypad,link,link port,David Phillips">
<META NAME="description" CONTENT="86 Central - LCD - Explains about the LCD, where it is located, and the findpixel and how to plot pixels on the screen.">
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000" LINK="#0000FF" VLINK="#0055FF">

<CENTER><IMG SRC="images/86Central.gif" WIDTH=301 HEIGHT=76 BORDER=0 ALT="86 Central"></CENTER>
<CENTER><H5>Best viewed in 1024x768</H5></CENTER>
<CENTER><H2>LCD Screen</H2></CENTER>

	<CENTER><IMG SRC="images/lcd_real.gif" ALT="Scanned in LCD Screen" BORDER=0></CENTER><BR>

	<CENTER><A HREF="images/lcd.gif"><IMG SRC="images/lcd_sm.gif" BORDER=0></A></CENTER>
	<CENTER><A HREF="images/lcd.gif"><B>View in <U>Full Screen</U></B></A></CENTER><BR><BR>
	
	<FONT SIZE="+1">T</FONT>he LCD, or Liquid Crystal Display, screen is the area on the TI-86 where graphics and text are displayed. This screen is 128x64 pixels wide. For more information, please click on the picture. This is not intended to be a programming tutorial, rather then a summary. Any tutorials will be posted below under the section, "More Information". Here is a overview (in programmers terms) on the display:<BR><BR>
	
	<UL>
		<LI>General Description:
			<UL>
				<LI>Dark black pixels "dots" overlayed on a light gray display area.
				<LI>128 pixels in width, 64 pixels in height
			</UL>
			
		<LI>Accessing the display (LCD) in memory:
			<UL>
				<LI>Memory mapped region begins at $FC00
				<LI>...and ends at $FFFF
				<LI>WIDTH (1 row) is 16 ($10 in hex) bytes long
				<LI>HEIGHT (1 column) is 8 ($8 in hex) bytes long
				<LI>128x64 = 8198. 8 PIXELS/BYTE, 8198/8 = 1024 bytes
				<LI>1024 bytes (or $400 in hex) is the length of the memory mapped region
				<LI>8 Pixels in a Byte, changing one byte may change all 8-pixels.
			</UL>
		
	</UL><BR><BR>

To draw a pixel to the screen, we use a findpixel routine developed by Dan Eble and James Yopp. I explained this routine in much detail on Tutorial #4 located on my tutorials page.<BR><BR>

<B>Examples:</B><BR>
<PRE>
	; Sets a Pixel at 64, 32
	ld e, 64
	ld d, 32
	
	call FindPixel		; Returns a bitmask, in this case %10000000 or $80

	or (hl)				; A = A or (HL), which OR's the bitmask, A, with the address in the display, (HL)
	ld (hl), a			; (HL) = A, Apply's the changes


	; XOR's (inverts) a Pixel at 64, 32
	ld e, 64
	ld d, 32
	
	call FindPixel		; Returns a bitmask, in this case %10000000 or $80

	xor (hl)			; A = A xor (HL), which XOR's the bitmask, A, with the address in the display, (HL)
						; Any bits set in the bitmask (only 1) will cause the cooresponding bit in (HL) to be inverted.
	ld (hl), a			; (HL) = A, Apply's the changes
	
	; Clears a pixel at 64, 32
	ld e, 64
	ld d, 32
	
	call FindPixel		; Returns a bitmask, in this case A = %10000000 or $80

	cpl 				; Same as XOR 255, Inverts bitmask (changes all 1's to 0's and 0's to 1's), in this case A = %01111111
	and (hl)			; A = A and (HL), which AND's the inverted bitmask, A, with the address in the display, (HL)
	ld (hl), a			; (HL) = A, Apply's the changes
</PRE><BR>

Here is the routine:<BR><BR>

<PRE>
;--------------------------------------------------------------------
; The Eble-Yopp-Yopp-Eble-Eble-Eble-Yopp Fast FindPixel Routine :)
; 36 bytes / 121 t-states not counting ret or possible push/pop of BC
;--------------------------------------------------------------------
; Input:  D = y
;         E = x
; Output: HL= address of byte in video memory
;         A = bitmask (bit corresponding to pixel is set)
;         C is modified
;
; +-----------+
; |(0,0)      |  <- Screen layout
; |           |
; |   (127,63)|
; +-----------+
;
;--------------------------------------------------------------------
FindPixel:
        ld hl,FP_Bits
        ld a,e
        and $07         ; a = bit offset
        add a,l
        ld l,a
        adc a,h
        sub l
        ld h,a
        ld c,(hl)       ; c = bitmask for (hl)
;48 t-states up to this point
        ld hl,FP_RLD
        ld (hl),d
        ld a,e          ; a = x/8 (byte offset within row)
        rrca
        rrca   
        rrca
        rld
        or $FC 
        ld l,(hl)
        ld h,a          ; hl -> byte in vid mem
        ld a,c          ; now a = bitmask for (hl)
;121 t-states up to this point
        ret

FP_RLD:  .db $00
FP_Bits: .db $80,$40,$20,$10,$08,$04,$02,$01

.end
</PRE>
	
	More Information:<BR>
		&nbsp;&nbsp;<A HREF="http://www.ti.com/calc/docs/86asmdisp.htm"><B>TI-86 Offical Asm Documentation - Display</B></A><BR>
		&nbsp;&nbsp;<A HREF="coding/z80ti864.htm">Matt Johnson's Simple Display Tutorial</A><BR>
		&nbsp;&nbsp;<A HREF="http://www.calpoly.edu/~tllilleh/a86/examples2.html">Trent Lillehaugen's Asm86 Tutorial - Video Examples</A><BR>

<BR>

<BR>
<HR>
<p>
<center>
<script language="JavaScript" type="text/javascript"> <!--
function go() {
	if (document.selecter.select1.options[document.selecter.select1.selectedIndex].value != "none")
		window.top.location = document.selecter.select1.options[document.selecter.select1.selectedIndex].value; }
//--> </script>
<form name="selecter"><select name="select1" size=1>
<option value=none>Our Websites</option>
<option value=none>---------------------------------</option>
<option value="http://www.acz.org">ACZ Frontpage</option>
<option value="http://ti83plus.acz.org">83+ Asm Central</option>
<option value="http://ti86.acz.org">86 Asm Central</option>
<option value="http://ti89.acz.org">89 Asm Central</option>
<option value="http://vti.acz.org">Virtual TI Emulator Site</option>
<option value="http://asmstudio.acz.org">Assembly Studio Site</option>
<option value=none>----------------------------------</option>
<option value="http://brett.acz.org">Brett's Homepage</option>
<option value="http://corey.acz.org">Corey's Homepage</option>
<option value="http://david.acz.org">David's Homepage</option>
<option value="http://dux.acz.org">Dux's Homepage</option>
<option value="http://james.acz.org">James' Homepage</option>
<option value="http://jeremy.acz.org">Jeremy's Homepage</option>
<option value="http://matt.acz.org">Matt's Homepage</option>
<option value="http://rusty.acz.org">Rusty's Homepage</option>
<option value="http://scott.acz.org">Scott's Homepage</option>
<option value=none>----------------------------------</option>
</select>
<input type="button" value="Go" onclick="go()">
</form>
</center>

<p><center>&copy; 1998 - 1999 <A HREF="http://www.acz.org" TARGET="_TOP">ACZ</A></center>

</BODY>

</HTML>
